Web
Services
Cobol
programmer
By
Camer
Laird
Web
Services
might
Next
Big
Thing
Thweek's
CobolReport
com
explains
whprogrammers
should
know
about
Last
month
CobolReport
kicked
off
series
Internet
protocols
with
original
killer
applicati
e-mail
Now
we
turn
from
oldest
Internet
standards
one
newest
programming
interface
Suppose
want
know
how
far
from
customer's
home
one
your
warehouses
00
just
ten
years
after
first
Web
server
wlaunched
mid-spring
that's
become
easy
do
point
Web
browser
any
popular
public
map
sites
enter
street
addresses
two
locations
and
read
answer
straight
from
display
see
your
browser
btricker
use
thresult
machine
calculations
Quite
few
programmers
have
become
adept
scraping
Web
pages
extract
useful
results
from
them
There
even
several
products
and
programming
languages
which
specialize
thchore
an
applicati
programmer
yourself
though
focused
delivering
results
your
end-users
hardly
have
time
gymnastics
involved
decoding
datfrom
complex
advertising-laden
pages
servers
generally
deliver
simply
want
invoke
subroutine
thlooks
something
like
mileage
computedifferenceaddress
address
promises
let
do
just
thWS's
different
constituencies
promises
lot
more
than
thIf
you've
read
popular
accounts
your
head
might
well
swimming
descriptions
corporate
intrigue
financial
arcanacronym
soup
ebXML?
UDDI?
copyright
politics
and
host
distractions
can
ignore
them
programmer
reduce
whole
story
these
essentials
will
become
standard
Like
e-mail
and
Web
no
one
company
will
own
Many
companies
will
claim
own
OK
ignore
these
claims
will
matter
will
right
way
solve
many
daily
programming
problems
Digital
Creations
Inc
co-founder
Paul
Everitt
puts
thway
Web
Services
WC
[World-Wide
Web
Consortium]
standard
with
infinite
Microsoft
marketing
dollars
Microsoft
won't
alone
tossing
money
around
WS's
engineering
story
compelling
thall
major
players
rushing
associate
themselves
with
There
already
dozens
technologies
distributed
computing
whmakes
better?
answer
simple
its
universality
Other
distributed
computing
approaches
already
least
modestly
successful
and
few
including
CORBDCOM
and
Jini
will
prosper
least
through
most
decade
though
neutral
way
thothers
will
never
achieve
might
work
project
programming
Cobol
an
EBCDIC-oriented
legacy
host
threquires
communicate
with
Japanese-language
Linux
palmtop
computer
With
you'll
expect
datget
through
accurately
Rival
contemporary
distributed
computing
methods
simply
don't
interoperate
smoothly
Web-oriented
standardizati
E-mail
standards
work
largely
centers
around
Internet
Engineering
Task
Force
IETF
variety
engineering
and
political
reasons
formalizati
or
will
hands
WC
needn't
worry
about
these
organizational
distinctions
or
many
details
standards
emerging
WC
only
essential
thpoint
clear
understanding
architecture
terms
three
layers
First
and
most
important
least
next
couple
years
remote
procedure
layer
Remote
procedures
an
old
technology
appearing
under
thname
by
remote
procedures
appear
under
names
XML-RPC
and
SOAP
While
XML
extensible
markup
language
key
design
needn't
understand
XML
or
even
aw
begusing
remote
procedures
Remote
procedures
allow
call
subroutines
implemented
other
hosts
though
they
were
local
your
own
machine
XML
and
other
building
blocks
take
c
all
translations
necessary
thdatappear
their
proper
form
remote
procedures
can
good
way
organize
computing
resources
withan
organizati
and
not
just
explofree
services
out
Web
By
exposing
corporate
assets
remote
procedures
even
very
large
and
complex
applications
decomposed
insequence
remote
procedure
calculations
Instead
maintaining
an
applicati
terms
complicated
inter-machine
communications
and
security
looks
like
brief
well-structured
program
built
explicsubroutine
calls
Whdo
those
subroutines
do?
During
first
phase
answer
will
much
same
CORBor
DCOM
development
they
do
whservice
providers
document
them
do
Remote
procedure
authors
thphase
not
only
provide
procedures
but
al
document
them
others
can
use
them
their
own
programs
proper
developers
build
and
use
second
layer
services
Along
with
remote
procedures
defines
introspecti
functionality
thservice
can
report
itself
Programmers
will
only
need
know
name
service
principle
and
can
ask
service
itself
all
other
informati
argument
calling
sequence
and
they
need
Finally
universal
descripti
discovery
and
integrati
UDDI
third
layer
which
aggregates
and
indexes
collections
services
thservices
and
programs
which
require
them
can
automatically
locate
each
other
Human-readable
search
engines
like
Yahoo
and
Google
index
available
content
UDDI
will
index
available
services
bad
neWhWS's
downsides?
complex
course
anything
thpowerful
hThcomplexity
means
thdoesn't
all
work
yet
Plenty
security
transactional
and
transport
particulars
remasolved--different
products
thsupposed
implement
even
low-level
SOAP
standard
simply
incompatible
few
specifics
Worse
from
perspective
CobolReport
readers
thnot
yet
available
Cobol
work
While
all
language-neutral
no
one
hyet
released
working
library
Cobol
There
hints
thone
might
appear
early
thsummer
Other
blemishes
will
al
find
their
solutions
SOAP
often
bandwidth
hog
and
XML
still
looks
balien
many
programmers
Few
will
c
though
once
they
start
creating
working
results
thend-users
applaud
And
thstep
already
being
taken
handful
early-adopting
organizations
standard
thdefines
how
Web
itself
will
become
preferred
platform
how
we'll
all
working
Web
Services
Cobol
programmer
By
Camer
Laird
Web
Services
might
Next
Big
Thing
Thweek's
CobolReport
com
explains
whprogrammers
should
know
about
Last
month
CobolReport
kicked
off
series
Internet
protocols
with
original
killer
applicati
e-mail
Now
we
turn
from
oldest
Internet
standards
one
newest
interface
Suppose
want
know
how
far
from
customer's
home
one
your
warehouses
00
just
ten
years
after
first
Web
server
wlaunched
mid-spring
that's
become
easy
do
point
Web
browser
any
popular
public
map
sites
enter
street
addresses
two
locations
and
read
answer
straight
from
display
see
your
browser
btricker
use
thresult
machine
calculations
Quite
few
programmers
have
become
adept
scraping
Web
pages
extract
useful
results
from
There
even
several
products
and
programming
languages
which
specialize
thchore
an
applicati
programmer
yourself
though
focused
delivering
results
your
end-users
hardly
have
time
gymnastics
involved
decoding
datfrom
complex
advertising-laden
pages
servers
generally
deliver
simply
want
invoke
subroutine
thlooks
something
like
mileage
computedifferenceaddress
address
promises
let
do
just
thWS's
different
constituencies
promises
lot
more
than
thIf
you've
read
popular
accounts
your
head
might
well
swimming
descriptions
corporate
intrigue
financial
arcanacronym
soup
ebXML?
UDDI?
copyright
politics
and
host
other
distractions
ignore
them
programmer
reduce
whole
story
these
essentials
will
become
standard
Like
e-mail
and
Web
no
one
company
will
own
Many
companies
will
claim
own
OK
ignore
these
claims
will
matter
will
right
way
solve
many
daily
programming
problems
Digital
Creations
Inc
co-founder
Paul
Everitt
puts
thway
Web
Services
WC
[World-Wide
Web
Consortium]
standard
with
infinite
Microsoft
marketing
dollars
Microsoft
won't
alone
tossing
money
around
WS's
engineering
story
compelling
thall
major
players
rushing
associate
themselves
with
There
already
dozens
technologies
distributed
computing
whmakes
better?
answer
simple
its
universality
Other
distributed
computing
approaches
already
least
modestly
successful
and
few
including
CORBDCOM
and
Jini
will
prosper
least
through
most
decade
though
neutral
way
thothers
will
never
achieve
might
work
project
programming
Cobol
an
EBCDIC-oriented
legacy
host
threquires
communicate
with
Japanese-language
Linux
palmtop
computer
With
you'll
expect
datget
through
accurately
Rival
contemporary
distributed
computing
methods
simply
don't
interoperate
smoothly
Web-oriented
standardizati
E-mail
standards
work
largely
centers
around
Internet
Engineering
Task
Force
IETF
variety
engineering
and
political
reasons
formalizati
or
will
hands
WC
needn't
worry
about
these
organizational
distinctions
or
many
details
standards
emerging
WC
only
essential
thpoint
clear
understanding
architecture
terms
three
layers
First
and
most
important
least
next
couple
years
remote
procedure
layer
Remote
procedures
an
old
technology
appearing
under
thname
by
remote
procedures
appear
under
names
XML-RPC
and
SOAP
While
XML
extensible
markup
language
key
design
needn't
understand
XML
or
even
aw
begusing
remote
procedures
Remote
procedures
allow
call
subroutines
implemented
other
hosts
though
they
were
local
your
own
machine
XML
and
other
building
blocks
take
c
all
translations
necessary
thdatappear
their
proper
form
remote
procedures
good
way
organize
computing
resources
withan
organizati
and
not
just
explofree
services
out
By
exposing
corporate
assets
remote
procedures
even
very
large
and
complex
applications
decomposed
insequence
remote
procedure
calculations
Instead
maintaining
an
applicati
terms
complicated
inter-machine
communications
and
security
looks
like
brief
well-structured
program
built
explicsubroutine
calls
Whdo
those
subroutines
do?
During
first
phase
programming
answer
will
much
same
CORBor
DCOM
development
they
do
whservice
providers
document
them
do
Remote
procedure
authors
thphase
not
only
provide
procedures
but
al
document
them
others
can
use
them
their
own
programs
programming
proper
developers
build
and
use
second
layer
services
Along
with
remote
procedures
defines
introspecti
functionality
thservice
can
report
itself
Programmers
will
only
need
know
name
service
principle
and
can
ask
service
itself
all
other
informati
argument
calling
sequence
and
they
need
Finally
universal
descripti
discovery
and
integrati
UDDI
third
layer
which
aggregates
and
indexes
collections
services
thservices
and
programs
which
require
them
can
automatically
locate
each
other
Human-readable
search
engines
like
Yahoo
and
Google
index
available
content
UDDI
will
index
available
services
bad
neWhWS's
downsides?
complex
course
anything
thpowerful
hThcomplexity
means
thdoesn't
all
work
yet
Plenty
security
transactional
and
transport
particulars
remasolved--different
products
thsupposed
implement
even
low-level
SOAP
standard
simply
incompatible
few
specifics
Worse
from
perspective
CobolReport
readers
thnot
yet
available
Cobol
work
While
all
language-neutral
no
one
hyet
released
working
library
Cobol
There
hints
thone
might
appear
early
thsummer
Other
blemishes
will
al
find
their
solutions
SOAP
often
bandwidth
hog
and
XML
still
looks
balien
many
programmers
Few
will
c
though
once
they
start
creating
working
results
thend-users
applaud
And
thstep
already
being
taken
handful
early-adopting
organizations
standard
thdefines
how
Web
itself
will
become
preferred
platform
how
we'll
all
working
Web
Services
Cobol
programmer
By
Camer
Laird
Web
Services
might
Next
Big
Thing
Thweek's
CobolReport
com
explains
whprogrammers
should
know
about
Last
month
CobolReport
kicked
off
series
Internet
protocols
with
original
killer
applicati
e-mail
Now
we
turn
from
oldest
Internet
standards
one
newest
programming
interface
Suppose
want
know
how
far
from
customer's
home
one
your
warehouses
00
just
ten
years
after
first
Web
server
wlaunched
mid-spring
that's
become
easy
do
point
Web
browser
any
popular
public
map
sites
enter
street
addresses
two
locations
and
read
answer
straight
from
display
see
your
browser
btricker
use
thresult
machine
calculations
Quite
few
programmers
have
become
adept
scraping
Web
pages
extract
useful
results
from
them
There
even
several
products
and
programming
languages
which
specialize
thchore
an
applicati
programmer
yourself
though
focused
delivering
results
your
end-users
hardly
have
time
gymnastics
involved
decoding
datfrom
complex
advertising-laden
pages
servers
generally
deliver
simply
want
invoke
subroutine
thlooks
something
like
mileage
computedifferenceaddress
address
promises
let
do
just
thWS's
different
constituencies
promises
lot
more
than
thIf
you've
read
popular
accounts
your
head
might
well
swimming
descriptions
corporate
intrigue
financial
arcanacronym
soup
ebXML?
UDDI?
copyright
politics
and
host
other
distractions
can
ignore
them
programmer
reduce
whole
story
these
essentials
will
become
standard
Like
e-mail
and
Web
no
one
company
will
own
Many
companies
will
claim
own
OK
ignore
these
claims
will
matter
will
right
way
solve
many
daily
programming
problems
Digital
Creations
Inc
co-founder
Paul
Everitt
puts
thway
Web
Services
WC
[World-Wide
Web
Consortium]
standard
with
infinite
Microsoft
marketing
dollars
Microsoft
won't
alone
tossing
money
around
WS's
engineering
story
compelling
thall
major
players
rushing
associate
themselves
with
There
already
dozens
technologies
distributed
computing
whmakes
better?
answer
simple
its
universality
Other
distributed
computing
approaches
already
least
modestly
successful
and
few
including
CORBDCOM
and
Jini
will
prosper
least
through
most
decade
though
neutral
way
thothers
will
never
achieve
might
work
project
programming
Cobol
an
EBCDIC-oriented
legacy
host
threquires
communicate
with
Japanese-language
Linux
palmtop
computer
With
you'll
expect
datget
through
accurately
Rival
contemporary
distributed
computing
methods
simply
don't
interoperate
smoothly
Web-oriented
standardizati
E-mail
standards
work
largely
centers
around
Internet
Engineering
Task
Force
IETF
variety
engineering
and
political
reasons
formalizati
or
will
hands
WC
needn't
worry
about
these
organizational
distinctions
or
many
details
standards
emerging
from
WC
only
essential
thpoint
clear
understanding
architecture
terms
three
layers
First
and
most
important
least
next
couple
years
remote
procedure
layer
Remote
procedures
an
old
technology
appearing
under
thname
by
remote
procedures
appear
under
names
XML-RPC
and
SOAP
While
XML
extensible
markup
language
key
design
needn't
understand
XML
or
even
aw
begusing
remote
procedures
Remote
procedures
allow
call
subroutines
implemented
other
hosts
though
they
were
local
your
own
machine
XML
and
other
building
blocks
take
c
all
translations
necessary
thdatappear
their
proper
form
remote
procedures
can
good
way
organize
computing
resources
withan
organizati
and
not
just
explofree
services
out
Web
By
exposing
corporate
assets
remote
procedures
even
very
large
and
complex
applications
decomposed
insequence
remote
procedure
calculations
Instead
maintaining
an
applicati
terms
complicated
inter-machine
communications
and
security
looks
like
brief
well-structured
program
built
explicsubroutine
calls
Whdo
those
subroutines
do?
During
first
phase
programming
answer
will
much
same
CORBor
DCOM
development
they
do
whservice
providers
document
them
do
Remote
procedure
authors
thphase
not
only
provide
procedures
but
al
document
them
others
can
use
them
their
own
programs
programming
proper
developers
build
and
use
second
layer
services
Along
with
remote
procedures
defines
introspecti
functionality
thservice
can
report
itself
Programmers
will
only
need
know
name
service
principle
and
can
ask
service
itself
all
other
informati
argument
calling
sequence
and
they
need
Finally
universal
descripti
discovery
and
integrati
UDDI
third
layer
which
aggregates
and
indexes
collections
services
thservices
and
programs
which
require
them
can
automatically
locate
each
other
Human-readable
search
engines
like
Yahoo
and
Google
index
available
content
UDDI
will
index
available
services
bad
neWhWS's
downsides?
complex
course
anything
thpowerful
hThcomplexity
means
thdoesn't
all
work
yet
Plenty
security
transactional
and
transport
particulars
remasolved--different
products
thsupposed
implement
even
low-level
SOAP
standard
simply
incompatible
few
specifics
Worse
from
perspective
CobolReport
readers
thnot
yet
available
Cobol
work
While
all
language-neutral
no
one
hyet
released
working
library
Cobol
There
hints
thone
might
appear
early
thsummer
Other
blemishes
will
al
find
their
solutions
SOAP
often
bandwidth
hog
and
XML
still
looks
balien
many
programmers
Few
will
c
though
once
they
start
creating
working
results
thend-users
applaud
And
thstep
already
being
taken
handful
early-adopting
organizations
standard
thdefines
how
Web
itself
will
become
preferred
platform
how
we'll
all
working